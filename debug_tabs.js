// –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –¢–ê–ë–û–í - –ó–ê–ü–£–°–¢–ò–¢–¨ –í –ö–û–ù–°–û–õ–ò –ë–†–ê–£–ó–ï–†–ê
console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –¢–ê–ë–û–í –ù–ê–ß–ê–¢–ê');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL —Ä–µ–∑—é–º–µ (–∫–æ–ø–∏—è –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
function isResumeUrl(url) {
  if (!url) {
    console.log('‚ùå URL –ø—É—Å—Ç–æ–π –∏–ª–∏ undefined');
    return false;
  }

  const hasHttps = url.startsWith('https://');
  const hasHttp = url.startsWith('http://');
  const hasHhKz = url.includes('hh.kz/resume/');
  const hasHhRu = url.includes('hh.ru/resume/');

  const isValid = (hasHhKz || hasHhRu) && (hasHttps || hasHttp);

  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ URL: ${url}`);
  console.log(`  - HTTPS: ${hasHttps}, HTTP: ${hasHttp}`);
  console.log(`  - HH.KZ resume: ${hasHhKz}, HH.RU resume: ${hasHhRu}`);
  console.log(`  - –†–µ–∑—É–ª—å—Ç–∞—Ç: ${isValid ? '‚úÖ –í–ê–õ–ò–î–ù–´–ô' : '‚ùå –ù–ï –í–ê–õ–ò–î–ù–´–ô'}`);

  return isValid;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ URL
console.log('\nüìç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û URL:');
const currentUrl = window.location.href;
console.log('–¢–µ–∫—É—â–∏–π URL:', currentUrl);
const isCurrentValid = isResumeUrl(currentUrl);
console.log('–¢–µ–∫—É—â–∏–π URL –≤–∞–ª–∏–¥–Ω—ã–π –¥–ª—è —Ä–µ–∑—é–º–µ:', isCurrentValid ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Chrome API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
if (typeof chrome !== 'undefined' && chrome.tabs) {
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó CHROME TABS API:');
  
  // –ú–µ—Ç–æ–¥ 1: –í—Å–µ —Ç–∞–±—ã
  chrome.tabs.query({}, (allTabs) => {
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${allTabs.length} —Ç–∞–±–æ–≤ –≤—Å–µ–≥–æ`);
    
    const resumeTabs = allTabs.filter(tab => {
      if (!tab.url || tab.id === undefined) return false;
      const isValidTab = !tab.discarded && tab.status !== 'unloaded';
      const isResume = isResumeUrl(tab.url);
      return isResume && isValidTab;
    });
    
    console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ ${resumeTabs.length} —Ç–∞–±–æ–≤ —Å —Ä–µ–∑—é–º–µ:`);
    resumeTabs.forEach((tab, index) => {
      console.log(`  ${index + 1}. ${tab.title} (ID: ${tab.id})`);
      console.log(`     URL: ${tab.url}`);
      console.log(`     Status: ${tab.status}, Discarded: ${tab.discarded}`);
    });
    
    if (resumeTabs.length === 0) {
      console.log('‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û –¢–ê–ë–û–í –° –†–ï–ó–Æ–ú–ï!');
      console.log('\nüîç –ê–ù–ê–õ–ò–ó –í–°–ï–• HH –¢–ê–ë–û–í:');
      
      const hhTabs = allTabs.filter(tab => 
        tab.url && (tab.url.includes('hh.kz') || tab.url.includes('hh.ru'))
      );
      
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${hhTabs.length} HH —Ç–∞–±–æ–≤:`);
      hhTabs.forEach((tab, index) => {
        console.log(`  ${index + 1}. ${tab.title}`);
        console.log(`     URL: ${tab.url}`);
        console.log(`     –°–æ–¥–µ—Ä–∂–∏—Ç /resume/: ${tab.url.includes('/resume/')}`);
        console.log(`     Status: ${tab.status}, Discarded: ${tab.discarded}`);
      });
    }
  });
  
  // –ú–µ—Ç–æ–¥ 2: –¢–µ–∫—É—â–µ–µ –æ–∫–Ω–æ
  chrome.tabs.query({currentWindow: true}, (windowTabs) => {
    console.log(`\nüìã –í —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ ${windowTabs.length} —Ç–∞–±–æ–≤`);
    
    const resumeTabsWindow = windowTabs.filter(tab => {
      if (!tab.url || tab.id === undefined) return false;
      const isValidTab = !tab.discarded && tab.status !== 'unloaded';
      const isResume = isResumeUrl(tab.url);
      return isResume && isValidTab;
    });
    
    console.log(`üéØ –í —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ ${resumeTabsWindow.length} —Ç–∞–±–æ–≤ —Å —Ä–µ–∑—é–º–µ`);
  });
  
} else {
  console.log('‚ùå Chrome Tabs API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
if (typeof chrome !== 'undefined' && chrome.runtime) {
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –†–ê–°–®–ò–†–ï–ù–ò–Ø:');
  
  chrome.runtime.sendMessage({type: 'GET_EXTENSION_STATE'}, (response) => {
    if (chrome.runtime.lastError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º:', chrome.runtime.lastError);
    } else {
      console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:', response);
      
      if (response && response.data && response.data.managedTabs) {
        console.log(`üìã –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç ${response.data.managedTabs.length} —Ç–∞–±–∞–º–∏:`);
        response.data.managedTabs.forEach((tab, index) => {
          console.log(`  ${index + 1}. ${tab.title} (ID: ${tab.tabId})`);
          console.log(`     State: ${tab.state}`);
          console.log(`     URL: ${tab.url}`);
        });
      } else {
        console.log('‚ùå –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∞–±–∞–º–∏');
      }
    }
  });
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–æ–≤
  chrome.runtime.sendMessage({type: 'REFRESH_TABS'}, (response) => {
    console.log('üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–æ–≤:', response);
  });
  
} else {
  console.log('‚ùå Chrome Runtime API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
}

console.log('\nüèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
console.log('üìù –ï—Å–ª–∏ —Ç–∞–±—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—é—Ç—Å—è:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç hh.kz/resume/ –∏–ª–∏ hh.ru/resume/');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–± –Ω–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω (discarded: false)');
console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–± –∑–∞–≥—Ä—É–∂–µ–Ω (status: complete)');
console.log('4. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ chrome://extensions/'); 